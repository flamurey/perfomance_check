plugins {
    id 'me.champeau.gradle.jmh' version '0.3.0'
    id "com.zoltu.kotlin" version "1.0.1"
}

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'idea'

sourceSets.main.scala.srcDirs = ['src/main/scala', 'src/main/java']
sourceSets.main.java.srcDirs = []

group 'flamurey'
version '0.1.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:1.0.1"
    compile 'org.scala-lang:scala-library:2.11.1'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

jmh {
    include = 'benchmark.concurrent.CounterBenchmark'

//    benchmarkMode = 'avgt' //  [Throughput/thrpt, AverageTime/avgt, SampleTime/sample, SingleShotTime/ss, All/all]
//    batchSize = 10000000
    fork = 1
    timeUnit = 'ms' // Output time unit. Available time units are: [m, s, ms, us, ns].
    failOnError = true

    iterations = 3
    timeOnIteration = '5s'

    warmupIterations = 3
    warmup = '5s'

//    warmupBatchSize = 10
//    warmupForks = 0

    warmupMode = 'INDI' //  Warmup modes are: [INDI, BULK, BULK_INDI].

    //    synchronizeIterations = false // Synchronize iterations?
//    threads = 4 // Number of worker threads to run with.
//    threadGroups = [2,3,4] //Override thread group distribution for asymmetric benchmarks.
//    timeout = '3s' // Timeout for benchmark iteration.

    profilers = ['gc'] // Use profilers to collect additional data.
    forceGC = true
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}